version: "3.9"

networks:
  cloud:
    driver: bridge

services:
  nginx:
#    image: openresty/openresty:alpine
    image: custom-nginx:latest
    container_name: nginx
    ports:
      - "80:80"
#      - "443:443"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      OTEL_LOG_LEVEL: debug
      OTEL_SERVICE_NAME: nginx
      OTEL_EXPORTER_OTLP_ENDPOINT: http://tempo:4317
    depends_on:
      - tempo
      - api
    networks:
      - cloud

  api:
    container_name: api
    image: custom-api:latest
#    build: ./api
    ports:
      - "8080"
    environment:
      - APP_PORT=8080
      - APP_NAME=api
      - TRACER_HOST=tempo:4318
      - DB_URL=jdbc:postgresql://postgres:5432/postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
    depends_on:
      - tempo
      - postgres
    networks:
      - cloud

  postgres:
    container_name: postgres
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432"
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data
    networks:
      - cloud

  tempo:
    image: grafana/tempo:main-ce317a8
    container_name: tempo
    command:
      - '-config.file=/etc/tempo.yaml'
      - '-config.expand-env=true'
    volumes:
      - ./docker/tempo/tempo.yaml:/etc/tempo.yaml
      - ./docker/tempo/data:/var/tempo
    ports:
      - "4317"   # OTLP over gRPC
      - "4318"   # OTLP over HTTP
      - "3200"   # Query frontend
    networks:
      - cloud

  grafana:
    image: grafana/grafana:11.2.2
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./docker/grafana/data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=123456
    depends_on:
      - tempo
    networks:
      - cloud